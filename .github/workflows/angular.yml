name: Angular
on:
  push:
  pull_request:
    types: [ opened, synchronize, reopened, locked ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

  code_analysis:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Test
        id: test
        run: |
          npm run test:ci 2>&1 | tee test.log
          result_code=${PIPESTATUS[0]}
          echo "::set-output name=test-log::$(cat test.log)"
          exit $result_code

      - name: Check for silent errors
        uses: actions-ecosystem/action-regex-match@v2
        id: regex-silent-errors
        with:
          text: ${{ steps.test.outputs.test-log }}
          regex: "^'Error', "

      - name: Fail on silent errors
        if: ${{ steps.regex-silent-errors.match != '' }}
        run: |
          echo "Silent errors detected in test step.\nMatch: ${{ steps.regex-silent-errors.match }}"
          exit 1

      - name: Check for silent stack traces
        uses: actions-ecosystem/action-regex-match@v2
        id: regex-silent-stack-traces
        with:
          text: ${{ steps.test.outputs.test-log }}
          regex: "^\\s\\s\\s\\sat (.+) \\(http://localhost"

      - name: Fail on silent stack traces
        if: ${{ steps.regex-silent-stack-traces.match != '' }}
        run: |
          echo "Silent stack traces detected in test step.\nMatch: ${{ steps.regex-silent-stack-traces.match }}"
          exit 1

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS
          fail_ci_if_error: true
          files: coverage/mds-desktop/cobertura-coverage.xml
          verbose: true

  localization:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check translations
        run: npm run locale:check

  build_de:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
